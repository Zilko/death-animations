#include "BaseAnimation.hpp"

struct ObjectProperties {
    int p1 = 1; // id
    float p2 = 0.f; // positionX
    float p3 = 0.f; // positionY
    const char* p4 = ""; // groups
    int p5 = 0; // baseColor
    int p6 = 0; // detailColor
    float p7 = 1.f; // scale
    float p8 = 0.f; // rotation
    int p9 = 0; // zLayer
    int p10 = 0; // zOrder
    bool p11 = false; // isFlipX 
    bool p12 = false; // isFlipY
    float p13 = 0.f; // hue
    bool p14 = false; // saturationEnabled
    bool p15 = false; // brightnessEnabled
    float p16 = 1.f; // saturation
    float p17 = 1.f; // brightness
    float p18 = 0.f; // hue2
    bool p19 = false; // saturationEnabled2
    bool p20 = false; // brightnessEnabled2
    float p21 = 1.f; // saturation2
    float p22 = 1.f; // brightness2
};

class NoobGameObject : public CCNode {

private:

    GameObject* m_baseObject = nullptr;
    Ref<GameObject> m_detailObject = nullptr;

    ccColor3B m_baseColor = {255, 255, 255};
    ccColor3B m_detailColor = {255, 255, 255};

    std::vector<CCSprite*> m_extraBaseSprites;
    std::vector<CCSprite*> m_extraDetailSprites;

    bool m_baseBlending;
    bool m_detailBlending;

    void init(int id) {
        CCNode::init();

        setTag(id);

        m_baseObject = GameObject::createWithKey(id);

        addChild(m_baseObject, 2);

        m_defaultZLayer = static_cast<int>(m_baseObject->m_defaultZLayer);
        m_defaultZOrder = static_cast<int>(m_baseObject->m_defaultZOrder);

        if (id == 507) {
            m_defaultZLayer = 3;
            m_defaultZOrder = -6;
        }

        if (id == 469) {
            m_defaultZLayer = 5;
            m_defaultZOrder = 3;
        }

        if (id == 1528)
            runAction(CCRepeatForever::create(CCRotateBy::create(2.65f, 360)));

        if (id == 1527)
            runAction(CCRepeatForever::create(CCRotateBy::create(2.65f, -360)));

        if (id == 255) {
            m_detailObject = GameObject::createWithKey(259);

            Loader::get()->queueInMainThread([self = Ref(this)] {
                self->getParent()->addChild(self->m_detailObject, self->getZOrder());

                self->m_detailObject->setPosition(self->getPosition());
                self->m_detailObject->setScale(self->getScale());
                self->m_detailObject->setFlipX(self->m_baseObject->isFlipX());
                self->m_detailObject->setFlipY(self->m_baseObject->isFlipY());

                self->setZOrder(self->getZOrder() * 10);
            });

            schedule(schedule_selector(NoobGameObject::updateDetailObjectPosition));
        }

        if (id == 220) {
            CCSprite* spr = CCSprite::createWithSpriteFrameName("colorSquare_01_small_color_001.png");

            m_extraDetailSprites.push_back(spr);

            addChild(spr);
        }

        if (id == 216) {
            CCSprite* spr = CCSprite::createWithSpriteFrameName("colorSpike_01_color_001.png");

            m_extraDetailSprites.push_back(spr);

            addChild(spr);
        }

        if (id == 1888) {
            CCSprite* spr = CCSprite::createWithSpriteFrameName("d_gradient_c_02_001.png");
            spr->setAnchorPoint({1, 0});

            m_extraBaseSprites.push_back(spr);

            addChild(spr);

            spr = CCSprite::createWithSpriteFrameName("d_gradient_c_02_001.png");
            spr->setAnchorPoint({1, 0});
            spr->setScaleX(-1);

            m_extraBaseSprites.push_back(spr);

            addChild(spr);

            spr = CCSprite::createWithSpriteFrameName("d_gradient_c_02_001.png");
            spr->setAnchorPoint({1, 0});
            spr->setScaleY(-1);

            m_extraBaseSprites.push_back(spr);

            addChild(spr);

            spr = CCSprite::createWithSpriteFrameName("d_gradient_c_02_001.png");
            spr->setAnchorPoint({1, 0});
            spr->setScale(-1);

            m_extraBaseSprites.push_back(spr);

            addChild(spr);
        }
    }

    void updateDetailObjectPosition(float) {
        m_detailObject->setPosition(getPosition());
    }

public:

    NoobHSV m_baseHSV;
    NoobHSV m_detailHSV;
    NoobHSV m_baseColorHSV;
    NoobHSV m_detailColorHSV;

    int m_defaultZLayer;
    int m_defaultZOrder;

    static NoobGameObject* create(int id) {
        NoobGameObject* ret = new NoobGameObject();

        ret->autorelease();
        ret->init(id);

        return ret;
    }

    void setFlipX(bool flipX) {
        if (m_baseObject)
            m_baseObject->setFlipX(flipX);
        
        if (m_detailObject)
            m_detailObject->setFlipX(flipX);
    }

    void setFlipY(bool flipY) {
        if (m_baseObject)
            m_baseObject->setFlipY(flipY);
        
        if (m_detailObject)
            m_detailObject->setFlipY(flipY);
    }

    void setOpacity(int opacity) {
        if (m_baseObject)
            m_baseObject->setOpacity(opacity);

        if (m_detailObject)
            m_detailObject->setOpacity(opacity);

        for (CCSprite* spr : m_extraBaseSprites)
            spr->setOpacity(opacity);

        for (CCSprite* spr : m_extraDetailSprites)
            spr->setOpacity(opacity);
    }

    void updateColor() {
        setBaseColor(Utils::applyHSV(Utils::applyHSV(m_baseColor, m_baseColorHSV), m_baseHSV), m_baseBlending, true);
        setDetailColor(Utils::applyHSV(Utils::applyHSV(m_detailColor, m_detailColorHSV), m_detailHSV), m_detailBlending, true);
    }

    void setBaseColor(const ccColor3B& color, bool blending, bool modified = false) {
        if (m_baseObject)
            m_baseObject->setObjectColor(color);

        for (CCSprite* spr : m_extraBaseSprites)
            spr->setColor(color);

        if (!modified) {
            m_baseColor = color;
            m_baseBlending = blending;
            updateColor();
        }

        if (blending) {
            ccBlendFunc blendFunc = { GL_SRC_ALPHA, GL_ONE };
            
            if (m_baseObject)
                m_baseObject->setBlendFunc(blendFunc);

            for (CCSprite* spr : m_extraBaseSprites)
                spr->setBlendFunc(blendFunc);
        }
    }

    void setDetailColor(const ccColor3B& color, bool blending, bool modified = false) {
        if (m_detailObject)
            m_detailObject->setObjectColor(color);

        for (CCSprite* spr : m_extraDetailSprites)
            spr->setColor(color);

        if (!modified) {
            m_detailBlending = blending;
            m_detailColor = color;
            updateColor();
        }

        if (blending) {
            ccBlendFunc blendFunc = { GL_SRC_ALPHA, GL_ONE };

            if (m_detailObject)
                m_detailObject->setBlendFunc(blendFunc);

            for (CCSprite* spr : m_extraDetailSprites)
                spr->setBlendFunc(blendFunc);
        }
    }

};

class FadeTo : public CCActionInterval {

private:

    int m_startOpacity = 0.f;
    int m_targetOpacity = 0.f;

    FadeTo(int startOpacity, int targetOpacity)
        : m_startOpacity(startOpacity), m_targetOpacity(targetOpacity) {}

    void update(float progress) override {
        if (m_pTarget)
            static_cast<NoobGameObject*>(m_pTarget)->setOpacity(m_startOpacity + (m_targetOpacity - m_startOpacity) * progress);
    }

public:

    static FadeTo* create(float duration, int startOpacity, int targetOpacity) {
        FadeTo* ret = new FadeTo(startOpacity, targetOpacity);

        if(ret->initWithDuration(duration)) {
            ret->autorelease();
            return ret;
        }

        delete ret;
        return nullptr;
    }

};

class HueTo : public CCActionInterval {

private:

    float m_startHue = 0.f;
    float m_targetHue = 0.f;

    float& m_targetValue;

    HueTo(float startHue, float targetHue, float& targetValue)
        : m_startHue(startHue), m_targetHue(targetHue), m_targetValue(targetValue) {}

    void update(float progress) override {
        if (!m_pTarget) return;

        m_targetValue = m_startHue + (m_targetHue - m_startHue) * progress;
        static_cast<NoobGameObject*>(m_pTarget)->updateColor();
    }

public:

    static HueTo* create(float duration, float startHue, float targetHue, float& targetValue) {
        HueTo* ret = new HueTo(startHue, targetHue, targetValue);

        if(ret->initWithDuration(duration)) {
            ret->autorelease();
            return ret;
        }

        delete ret;
        return nullptr;
    }

};

class Congregation : public BaseAnimation {

private:

    constexpr static std::array<ObjectProperties, 450> m_objects = {
        {
            {.p1=220,.p2=40.5,.p3=76.5,.p4="82.79",.p5=4,.p6=4,.p8=90,.p9=7,.p13=-150,.p18=-150},{.p1=255,.p2=57,.p3=60,.p4="82.79",.p5=4,.p6=5,.p7=2,.p9=3},{.p1=495,.p2=57,.p3=60,.p4="34.76.82.79",.p5=4,.p7=2,.p9=3,.p10=-6},{.p1=220,.p2=130.5,.p3=164.5,.p4="82.79",.p5=4,.p6=4,.p8=90,.p9=7,.p13=-150,.p18=-150},{.p1=508,.p2=74.5,.p3=73,.p4="82.79",.p5=4,.p9=5,.p10=2},{.p1=508,.p2=74.5,.p3=69,.p4="82.79",.p5=4,.p9=5,.p10=2},{.p1=202,.p2=72,.p3=135},{.p1=495,.p2=147,.p3=180,.p4="34.76.82.79",.p5=4,.p7=2,.p9=3,.p10=-6},{.p1=508,.p2=74.5,.p3=77,.p4="82.79",.p5=4,.p9=5,.p10=2},{.p1=508,.p2=74.5,.p3=81,.p4="82.79",.p5=4,.p9=5,.p10=2},{.p1=507,.p2=62,.p3=15,.p4="34.82.79",.p5=6,.p8=-90},{.p1=507,.p2=58,.p3=15,.p4="34.82.79",.p5=6,.p8=-90},{.p1=469,.p2=76,.p3=15,.p4="34.82.79",.p5=6,.p8=-90,.p9=3,.p10=-5},{.p1=469,.p2=156.5,.p3=-13.5,.p4="34.82.79",.p5=6,.p8=-90,.p9=1,.p10=-6,.p12=1},{.p1=507,.p2=156,.p3=135,.p4="34.82.79",.p5=6,.p8=-90},{.p1=469,.p2=68,.p3=7,.p4="34.82.79",.p5=6,.p8=-90,.p9=1,.p10=-6},{.p1=507,.p2=156,.p3=105,.p4="34.82.79",.p5=6,.p8=-90},{.p1=255,.p2=102,.p3=75,.p4="82.79",.p5=4,.p6=5,.p9=3},{.p1=255,.p2=117.59961,.p3=60.640015,.p4="82.79",.p5=4,.p6=5,.p9=3},{.p1=468,.p2=135.5,.p3=-35.873993,.p4="34.82.79",.p5=6,.p9=1},{.p1=507,.p2=148,.p3=105,.p4="34.82.79",.p5=6,.p8=-90},{.p1=507,.p2=151.5,.p3=224.5,.p4="34.82.79",.p5=6,.p8=-90,.p11=1},{.p1=469,.p2=72,.p3=11,.p4="34.82.79",.p5=6,.p8=-90,.p9=1,.p10=-6},{.p1=469,.p2=104.5,.p3=-13.5,.p4="34.82.79",.p5=6,.p8=-90,.p9=1,.p10=-6},{.p1=469,.p2=96.5,.p3=-21.5,.p4="34.82.79",.p5=6,.p8=-90,.p9=1,.p10=-6},{.p1=469,.p2=100.5,.p3=-17.5,.p4="34.82.79",.p5=6,.p8=-90,.p9=1,.p10=-6},{.p1=507,.p2=152,.p3=105,.p4="34.82.79",.p5=6,.p8=-90},{.p1=255,.p2=153.40039,.p3=39.90399,.p4="82.79",.p5=4,.p6=5,.p7=2,.p9=3},{.p1=255,.p2=132,.p3=75,.p4="82.79",.p5=4,.p6=5,.p9=3},{.p1=507,.p2=147.5,.p3=224.5,.p4="34.82.79",.p5=6,.p8=-90,.p11=1},{.p1=468,.p2=130.5,.p3=-31.873993,.p4="34.82.79",.p5=6,.p9=1},{.p1=468,.p2=128,.p3=-27.873993,.p4="34.82.79",.p5=6,.p9=1},{.p1=468,.p2=126.5,.p3=-35.873993,.p4="34.82.79",.p5=6,.p9=1},{.p1=255,.p2=142.19922,.p3=19.112,.p4="82.79",.p5=4,.p6=5,.p9=3},{.p1=255,.p2=147,.p3=180,.p4="82.79",.p5=4,.p6=5,.p7=2,.p9=3},{.p1=507,.p2=148,.p3=135,.p4="34.82.79",.p5=6,.p8=-90},{.p1=507,.p2=152,.p3=135,.p4="34.82.79",.p5=6,.p8=-90},{.p1=211,.p2=144.19922,.p3=79.48999,.p4="80.81.970",.p5=2,.p7=1.8,.p9=-3,.p10=4},{.p1=211,.p2=144.19922,.p3=79.48999,.p4="80.81.970",.p5=6,.p7=2,.p9=-3,.p10=3,.p15=1,.p17=-0.6},{.p1=1765,.p2=158,.p3=79,.p4="82.79",.p5=2,.p9=5,.p10=2},{.p1=507,.p2=176,.p3=312.5,.p4="34.82.79",.p5=6,.p8=-90,.p11=1},{.p1=1888,.p2=177.40039,.p3=358.724,.p4="82.79",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=507,.p2=180,.p3=342.5,.p4="34.82.79",.p5=6,.p8=-90,.p11=1},{.p1=508,.p2=194.5,.p3=73,.p4="82.79",.p5=4,.p9=5,.p10=2},{.p1=507,.p2=184,.p3=282.5,.p4="34.82.79",.p5=6,.p8=-90,.p11=1},{.p1=508,.p2=194.5,.p3=77,.p4="82.79",.p5=4,.p9=5,.p10=2},{.p1=508,.p2=194.5,.p3=69,.p4="82.79",.p5=4,.p9=5,.p10=2},{.p1=507,.p2=180,.p3=312.5,.p4="34.82.79",.p5=6,.p8=-90,.p11=1},{.p1=508,.p2=164.5,.p3=155,.p4="82.79",.p5=4,.p9=5,.p10=2},{.p1=507,.p2=180,.p3=282.5,.p4="34.82.79",.p5=6,.p8=-90,.p11=1},{.p1=507,.p2=184,.p3=312.5,.p4="34.82.79",.p5=6,.p8=-90,.p11=1},{.p1=508,.p2=194.5,.p3=81,.p4="82.79",.p5=4,.p9=5,.p10=2},{.p1=507,.p2=176,.p3=342.5,.p4="34.82.79",.p5=6,.p8=-90,.p11=1},{.p1=507,.p2=184,.p3=342.5,.p4="34.82.79",.p5=6,.p8=-90,.p11=1},{.p1=508,.p2=164.5,.p3=163,.p4="82.79",.p5=4,.p9=5,.p10=2},{.p1=508,.p2=164.5,.p3=159,.p4="82.79",.p5=4,.p9=5,.p10=2},{.p1=508,.p2=164.5,.p3=151,.p4="82.79",.p5=4,.p9=5,.p10=2},{.p1=507,.p2=170.5,.p3=-5,.p4="34.82.79",.p5=6,.p8=-270,.p11=1},{.p1=507,.p2=174.5,.p3=-5,.p4="34.82.79",.p5=6,.p8=-270,.p11=1},{.p1=507,.p2=180,.p3=257,.p4="34.82.79",.p5=6,.p8=-270,.p12=1},{.p1=255,.p2=177,.p3=60,.p4="82.79",.p5=4,.p6=5,.p7=2,.p9=3},{.p1=469,.p2=160.5,.p3=-17.5,.p4="34.82.79",.p5=6,.p8=-90,.p9=1,.p10=-6,.p12=1},{.p1=507,.p2=166.5,.p3=-5,.p4="34.82.79",.p5=6,.p8=-270,.p11=1},{.p1=255,.p2=187.09961,.p3=32.115997,.p4="82.79",.p5=4,.p6=5,.p9=3},{.p1=495,.p2=177,.p3=60,.p4="34.76.82.79",.p5=4,.p7=2,.p9=3,.p10=-6},{.p1=507,.p2=176,.p3=261,.p4="34.82.79",.p5=6,.p8=-270,.p12=1},{.p1=469,.p2=164.5,.p3=-21.5,.p4="34.82.79",.p5=6,.p8=-90,.p9=3,.p10=-6,.p12=1},{.p1=469,.p2=165.5,.p3=224.5,.p4="82.34.79",.p5=6,.p9=3,.p10=-6},{.p1=469,.p2=157.5,.p3=232.5,.p4="82.34.79",.p5=6,.p9=1,.p10=-6},{.p1=507,.p2=184,.p3=253,.p4="34.82.79",.p5=6,.p8=-270,.p12=1},{.p1=469,.p2=161.5,.p3=228.5,.p4="82.34.79",.p5=6,.p9=1,.p10=-6},{.p1=507,.p2=176,.p3=282.5,.p4="34.82.79",.p5=6,.p8=-90,.p11=1},{.p1=211,.p2=182.30078,.p3=118.770996,.p4="80.81.970",.p5=6,.p7=2,.p9=-3,.p10=3,.p15=1,.p17=-0.6},{.p1=211,.p2=182.30078,.p3=118.770996,.p4="80.81.970",.p5=2,.p7=1.8,.p9=-3,.p10=4},{.p1=211,.p2=191.80078,.p3=40.523987,.p4="80.81.970",.p5=2,.p7=1.8,.p9=-3,.p10=4},{.p1=211,.p2=191.80078,.p3=40.523987,.p4="80.81.970",.p5=6,.p7=2,.p9=-3,.p10=3,.p15=1,.p17=-0.6},{.p1=211,.p2=192.5,.p3=344.643,.p4="80.81.970",.p5=6,.p7=2,.p9=-3,.p10=3,.p15=1,.p17=-0.6},{.p1=211,.p2=192.5,.p3=344.643,.p4="80.81.970",.p5=2,.p7=1.8,.p9=-3,.p10=4},{.p1=211,.p2=193.09961,.p3=273.286,.p4="80.81.970",.p5=2,.p7=1.8,.p9=-3,.p10=4},{.p1=211,.p2=193.09961,.p3=273.286,.p4="80.81.970",.p5=6,.p7=2,.p9=-3,.p10=3,.p15=1,.p17=-0.6},{.p1=211,.p2=223,.p3=155.11401,.p4="80.81.970",.p5=6,.p7=2,.p9=-3,.p10=3,.p15=1,.p17=-0.6},{.p1=211,.p2=223,.p3=155.11401,.p4="80.81.970",.p5=2,.p7=1.8,.p9=-3,.p10=4},{.p1=211,.p2=233.5,.p3=-52.381012,.p4="80.81.970",.p5=6,.p7=2,.p9=-3,.p10=3,.p15=1,.p17=-0.6},{.p1=211,.p2=230.5,.p3=383.609,.p4="80.81.970",.p5=6,.p7=2,.p9=-3,.p10=3,.p15=1,.p17=-0.6},{.p1=211,.p2=233.5,.p3=-52.381012,.p4="80.81.970",.p5=2,.p7=1.8,.p9=-3,.p10=4},{.p1=211,.p2=230.69922,.p3=230.61902,.p4="80.81.970",.p5=2,.p7=1.8,.p9=-3,.p10=4},{.p1=211,.p2=230.5,.p3=383.609,.p4="80.81.970",.p5=2,.p7=1.8,.p9=-3,.p10=4},{.p1=211,.p2=234.5,.p3=308.77698,.p4="80.81.970",.p5=6,.p7=2,.p9=-3,.p10=3,.p15=1,.p17=-0.6},{.p1=211,.p2=230.69922,.p3=230.61902,.p4="80.81.970",.p5=6,.p7=2,.p9=-3,.p10=3,.p15=1,.p17=-0.6},{.p1=211,.p2=234.5,.p3=308.77698,.p4="80.81.970",.p5=2,.p7=1.8,.p9=-3,.p10=4},{.p1=211,.p2=237.80078,.p3=20.459015,.p4="80.81.970",.p5=6,.p7=2,.p9=-3,.p10=3,.p15=1,.p17=-0.6},{.p1=211,.p2=237.80078,.p3=20.459015,.p4="80.81.970",.p5=2,.p7=1.8,.p9=-3,.p10=4},{.p1=211,.p2=240.59961,.p3=180.98798,.p4="80.81.970",.p5=2,.p7=1.8,.p9=-3,.p10=4},{.p1=211,.p2=240.59961,.p3=180.98798,.p4="80.81.970",.p5=6,.p7=2,.p9=-3,.p10=3,.p15=1,.p17=-0.6},{.p1=507,.p2=352,.p3=-156.5,.p4="34.83.79",.p5=6,.p8=-90,.p11=1},{.p1=211,.p2=350.19922,.p3=4.552002,.p4="80.81.970",.p5=6,.p7=2,.p9=-3,.p10=3,.p15=1,.p17=-0.6},{.p1=507,.p2=352,.p3=-66.5,.p4="34.83.79",.p5=6,.p8=-90,.p11=1},{.p1=507,.p2=356,.p3=-100.5,.p4="34.83.79",.p5=6,.p8=-90,.p11=1},{.p1=507,.p2=352,.p3=-96.5,.p4="34.83.79",.p5=6,.p8=-90,.p11=1},{.p1=1527,.p2=303.4004,.p3=140.18402,.p4="68",.p5=4,.p9=5,.p10=2},{.p1=494,.p2=303.4004,.p3=140.18402,.p4="68",.p5=4,.p7=0.5,.p9=5,.p10=2},{.p1=507,.p2=356,.p3=-160.5,.p4="34.83.79",.p5=6,.p8=-90,.p11=1},{.p1=507,.p2=356,.p3=-130.5,.p4="34.83.79",.p5=6,.p8=-90,.p11=1},{.p1=507,.p2=356,.p3=-70.5,.p4="34.83.79",.p5=6,.p8=-90,.p11=1},{.p1=507,.p2=352,.p3=-126.5,.p4="34.83.79",.p5=6,.p8=-90,.p11=1},{.p1=1528,.p2=303.4004,.p3=140.18402,.p4="68",.p5=4,.p9=5,.p10=2},{.p1=211,.p2=263.5,.p3=145.17102,.p4="80.81.970",.p5=2,.p7=1.8,.p9=-3,.p10=4},{.p1=211,.p2=263.5,.p3=145.17102,.p4="80.81.970",.p5=6,.p7=2,.p9=-3,.p10=3,.p15=1,.p17=-0.6},{.p1=211,.p2=265.4004,.p3=-8.993988,.p4="80.81.970",.p5=6,.p7=2,.p9=-3,.p10=3,.p15=1,.p17=-0.6},{.p1=211,.p2=265.4004,.p3=-8.993988,.p4="80.81.970",.p5=2,.p7=1.8,.p9=-3,.p10=4},{.p1=211,.p2=266.19922,.p3=68.13599,.p4="80.81.970",.p5=6,.p7=2,.p9=-3,.p10=3,.p15=1,.p17=-0.6},{.p1=211,.p2=267.69922,.p3=217.547,.p4="80.81.970",.p5=2,.p7=1.8,.p9=-3,.p10=4},{.p1=211,.p2=268.5,.p3=337.13202,.p4="80.81.970",.p5=2,.p7=1.8,.p9=-3,.p10=4},{.p1=211,.p2=266.19922,.p3=68.13599,.p4="80.81.970",.p5=2,.p7=1.8,.p9=-3,.p10=4},{.p1=211,.p2=267.69922,.p3=217.547,.p4="80.81.970",.p5=6,.p7=2,.p9=-3,.p10=3,.p15=1,.p17=-0.6},{.p1=211,.p2=268.5,.p3=337.13202,.p4="80.81.970",.p5=6,.p7=2,.p9=-3,.p10=3,.p15=1,.p17=-0.6},{.p1=211,.p2=284,.p3=33.209015,.p4="80.81.970",.p5=2,.p7=1.8,.p9=-3,.p10=4},{.p1=211,.p2=284,.p3=33.209015,.p4="80.81.970",.p5=6,.p7=2,.p9=-3,.p10=3,.p15=1,.p17=-0.6},{.p1=211,.p2=288.5,.p3=116.471985,.p4="80.81.970",.p5=2,.p7=1.8,.p9=-3,.p10=4},{.p1=211,.p2=288.5,.p3=116.471985,.p4="80.81.970",.p5=6,.p7=2,.p9=-3,.p10=3,.p15=1,.p17=-0.6},{.p1=211,.p2=306.69922,.p3=260.985,.p4="80.81.970",.p5=2,.p7=1.8,.p9=-3,.p10=4},{.p1=211,.p2=306.69922,.p3=260.985,.p4="80.81.970",.p5=6,.p7=2,.p9=-3,.p10=3,.p15=1,.p17=-0.6},{.p1=211,.p2=313.4004,.p3=-36.53601,.p4="80.81.970",.p5=2,.p7=1.8,.p9=-3,.p10=4},{.p1=211,.p2=313.4004,.p3=-36.53601,.p4="80.81.970",.p5=6,.p7=2,.p9=-3,.p10=3,.p15=1,.p17=-0.6},{.p1=211,.p2=314.5996,.p3=49.799988,.p4="80.81.970",.p5=2,.p7=1.8,.p9=-3,.p10=4},{.p1=211,.p2=314.5996,.p3=49.799988,.p4="80.81.970",.p5=6,.p7=2,.p9=-3,.p10=3,.p15=1,.p17=-0.6},{.p1=211,.p2=317.5,.p3=302.857,.p4="80.81.970",.p5=6,.p7=2,.p9=-3,.p10=3,.p15=1,.p17=-0.6},{.p1=211,.p2=317.5,.p3=302.857,.p4="80.81.970",.p5=2,.p7=1.8,.p9=-3,.p10=4},{.p1=211,.p2=332.0996,.p3=155.638,.p4="80.81.970",.p5=2,.p7=1.8,.p9=-3,.p10=4},{.p1=211,.p2=332.0996,.p3=155.638,.p4="80.81.970",.p5=6,.p7=2,.p9=-3,.p10=3,.p15=1,.p17=-0.6},{.p1=211,.p2=346.30078,.p3=-74.151,.p4="80.81.970",.p5=2,.p7=1.8,.p9=-3,.p10=4},{.p1=211,.p2=346.30078,.p3=-74.151,.p4="80.81.970",.p5=6,.p7=2,.p9=-3,.p10=3,.p15=1,.p17=-0.6},{.p1=211,.p2=350.19922,.p3=4.552002,.p4="80.81.970",.p5=2,.p7=1.8,.p9=-3,.p10=4},{.p1=1888,.p2=353.5996,.p3=-170.45999,.p4="83.79",.p5=3,.p7=4,.p9=3,.p10=9,.p11=1},{.p1=220,.p2=400.5,.p3=194.5,.p4="83.79",.p5=4,.p6=4,.p8=90,.p9=7,.p13=-150,.p18=-150},{.p1=508,.p2=448.5,.p3=75,.p4="83.79",.p5=4,.p9=5,.p10=2},{.p1=698,.p2=447.5,.p3=120.5,.p4="83.79",.p5=5,.p7=2,.p9=1,.p10=2},{.p1=1339,.p2=447.5,.p3=120.5,.p4="83.79",.p5=4,.p7=2,.p9=3,.p10=2},{.p1=255,.p2=452.4004,.p3=84.862,.p4="83.79",.p5=4,.p6=5,.p9=3},{.p1=508,.p2=448.5,.p3=79,.p4="83.79",.p5=4,.p9=5,.p10=2},{.p1=508,.p2=448.5,.p3=71,.p4="83.79",.p5=4,.p9=5,.p10=2},{.p1=508,.p2=448.5,.p3=83,.p4="83.79",.p5=4,.p9=5,.p10=2},{.p1=507,.p2=360,.p3=-164.5,.p4="34.83.79",.p5=6,.p8=-90,.p11=1},{.p1=255,.p2=417,.p3=210,.p4="83.79",.p5=4,.p6=5,.p7=2,.p9=3},{.p1=495,.p2=417,.p3=210,.p4="34.76.83.79",.p5=4,.p7=2,.p9=3,.p10=-6},{.p1=508,.p2=434.5,.p3=181,.p4="83.79",.p5=4,.p9=5,.p10=2},{.p1=508,.p2=434.5,.p3=189,.p4="83.79",.p5=4,.p9=5,.p10=2},{.p1=508,.p2=434.5,.p3=193,.p4="83.79",.p5=4,.p9=5,.p10=2},{.p1=508,.p2=434.5,.p3=185,.p4="83.79",.p5=4,.p9=5,.p10=2},{.p1=507,.p2=417.30078,.p3=254.5,.p4="34.83.79",.p5=6,.p8=-90,.p11=1,.p12=1},{.p1=469,.p2=403.30078,.p3=258.367,.p4="34.83.79",.p5=6,.p9=1,.p10=-6,.p11=1},{.p1=507,.p2=388.80078,.p3=312.5,.p4="34.83.79",.p5=6,.p8=-90,.p11=1,.p12=1},{.p1=1888,.p2=387.4004,.p3=388.71997,.p4="83.79",.p5=3,.p7=4,.p9=3,.p10=9,.p11=1},{.p1=507,.p2=388.80078,.p3=342.5,.p4="34.83.79",.p5=6,.p8=-90,.p11=1,.p12=1},{.p1=507,.p2=388.80078,.p3=372.5,.p4="34.83.79",.p5=6,.p8=-90,.p11=1,.p12=1},{.p1=507,.p2=388.80078,.p3=291,.p4="34.83.79",.p5=6,.p8=-270},{.p1=507,.p2=360,.p3=-74.5,.p4="34.83.79",.p5=6,.p8=-90,.p11=1},{.p1=507,.p2=413.30078,.p3=254.5,.p4="34.83.79",.p5=6,.p8=-90,.p11=1,.p12=1},{.p1=469,.p2=407.30078,.p3=262.367,.p4="34.83.79",.p5=6,.p9=1,.p10=-6,.p11=1},{.p1=469,.p2=430,.p3=-17.5,.p4="34.83.79",.p5=6,.p9=1,.p10=-6,.p11=1,.p12=1},{.p1=469,.p2=399.5,.p3=254.5,.p4="34.83.79",.p5=6,.p9=3,.p10=-6,.p11=1},{.p1=469,.p2=362.0996,.p3=-38.142,.p4="34.83.79",.p5=6,.p8=-180,.p9=1,.p10=-6,.p11=1,.p12=1},{.p1=507,.p2=384.80078,.p3=312.5,.p4="34.83.79",.p5=6,.p8=-90,.p11=1,.p12=1},{.p1=507,.p2=380.80078,.p3=312.5,.p4="34.83.79",.p5=6,.p8=-90,.p11=1,.p12=1},{.p1=507,.p2=384.80078,.p3=342.5,.p4="34.83.79",.p5=6,.p8=-90,.p11=1,.p12=1},{.p1=507,.p2=380.80078,.p3=342.5,.p4="34.83.79",.p5=6,.p8=-90,.p11=1,.p12=1},{.p1=507,.p2=384.80078,.p3=372.5,.p4="34.83.79",.p5=6,.p8=-90,.p11=1,.p12=1},{.p1=507,.p2=380.80078,.p3=372.5,.p4="34.83.79",.p5=6,.p8=-90,.p11=1,.p12=1},{.p1=507,.p2=384.80078,.p3=287,.p4="34.83.79",.p5=6,.p8=-270},{.p1=507,.p2=380.80078,.p3=283,.p4="34.83.79",.p5=6,.p8=-270},{.p1=507,.p2=418,.p3=165,.p4="34.83.79",.p5=6,.p8=-90},{.p1=507,.p2=422,.p3=165,.p4="34.83.79",.p5=6,.p8=-90},{.p1=507,.p2=426,.p3=165,.p4="34.83.79",.p5=6,.p8=-90},{.p1=507,.p2=418,.p3=135,.p4="34.83.79",.p5=6,.p8=-90},{.p1=507,.p2=422,.p3=135,.p4="34.83.79",.p5=6,.p8=-90},{.p1=507,.p2=426,.p3=135,.p4="34.83.79",.p5=6,.p8=-90},{.p1=507,.p2=418,.p3=118,.p4="34.83.79",.p5=6,.p8=-90},{.p1=507,.p2=422,.p3=120,.p4="34.83.79",.p5=6,.p8=-90},{.p1=507,.p2=426,.p3=122,.p4="34.83.79",.p5=6,.p8=-90},{.p1=507,.p2=360,.p3=-134.5,.p4="34.83.79",.p5=6,.p8=-90,.p11=1},{.p1=507,.p2=360,.p3=-104.5,.p4="34.83.79",.p5=6,.p8=-90,.p11=1},{.p1=469,.p2=422,.p3=-9.5,.p4="34.83.79",.p5=6,.p9=1,.p10=-6,.p11=1,.p12=1},{.p1=507,.p2=416.5,.p3=81.5,.p4="83.79",.p5=4,.p7=2,.p9=3,.p10=2},{.p1=469,.p2=426,.p3=-13.5,.p4="34.83.79",.p5=6,.p9=1,.p10=-6,.p11=1,.p12=1},{.p1=469,.p2=450.5,.p3=19,.p4="34.83.79",.p5=6,.p9=1,.p10=-6,.p11=1,.p12=1},{.p1=469,.p2=454.5,.p3=15,.p4="34.83.79",.p5=6,.p9=1,.p10=-6,.p11=1,.p12=1},{.p1=468,.p2=392,.p3=-23.873993,.p4="34.83.79",.p5=6,.p9=1},{.p1=468,.p2=400,.p3=-31.873993,.p4="34.83.79",.p5=6,.p9=1},{.p1=468,.p2=396,.p3=-27.873993,.p4="34.83.79",.p5=6,.p9=1},{.p1=469,.p2=370.0996,.p3=-46.142,.p4="34.83.79",.p5=6,.p8=-180,.p9=1,.p10=-6,.p11=1,.p12=1},{.p1=469,.p2=366.0996,.p3=-42.142,.p4="34.83.79",.p5=6,.p8=-180,.p9=1,.p10=-6,.p11=1,.p12=1},{.p1=211,.p2=386,.p3=-34.37799,.p4="80.81.970",.p5=6,.p7=2,.p9=-3,.p10=3,.p15=1,.p17=-0.6},{.p1=211,.p2=386,.p3=-34.37799,.p4="80.81.970",.p5=2,.p7=1.8,.p9=-3,.p10=4},{.p1=508,.p2=494.5,.p3=111,.p4="83.79",.p5=4,.p9=5,.p10=2},{.p1=508,.p2=494.5,.p3=119,.p4="83.79",.p5=4,.p9=5,.p10=2},{.p1=508,.p2=494.5,.p3=115,.p4="83.79",.p5=4,.p9=5,.p10=2},{.p1=495,.p2=487,.p3=78,.p4="34.76.83.79",.p5=4,.p7=2,.p9=3,.p10=-6},{.p1=255,.p2=467.80078,.p3=49.182007,.p4="83.79",.p5=4,.p6=5,.p9=3},{.p1=507,.p2=516.5,.p3=119,.p4="83.79",.p5=4,.p7=2,.p8=-90,.p9=3,.p10=2},{.p1=1765,.p2=476,.p3=97,.p4="83.79",.p5=2,.p9=5,.p10=2},{.p1=507,.p2=476.5,.p3=81.5,.p4="83.79",.p5=4,.p7=2,.p9=3,.p10=2},{.p1=494,.p2=553.5996,.p3=195.05902,.p4="68",.p5=4,.p7=0.5,.p9=5,.p10=2},{.p1=508,.p2=494.5,.p3=123,.p4="83.79",.p5=4,.p9=5,.p10=2},{.p1=507,.p2=464.5,.p3=19,.p4="34.83.79",.p5=6,.p8=-90,.p12=1},{.p1=1527,.p2=553.5996,.p3=195.05902,.p4="68",.p5=4,.p9=5,.p10=2},{.p1=507,.p2=468.5,.p3=19,.p4="34.83.79",.p5=6,.p8=-90,.p12=1},{.p1=469,.p2=458.5,.p3=11,.p4="34.83.79",.p5=6,.p9=1,.p10=-6,.p11=1,.p12=1},{.p1=1528,.p2=553.5996,.p3=195.05902,.p4="68",.p5=4,.p9=5,.p10=2},{.p1=255,.p2=489.30078,.p3=76.73901,.p4="83.79",.p5=4,.p6=5,.p7=2,.p9=3},{.p1=220,.p2=504.69922,.p3=92.52899,.p4="83.79",.p5=4,.p6=4,.p8=90,.p9=7,.p13=-150,.p18=-150},{.p1=211,.p2=474.19922,.p3=229.96802,.p4="80.81.970",.p5=2,.p7=1.8,.p9=-3,.p10=4,.p12=1},{.p1=211,.p2=474.19922,.p3=229.96802,.p4="80.81.970",.p5=6,.p7=2,.p9=-3,.p10=3,.p12=1,.p15=1,.p17=-0.6},{.p1=211,.p2=512.3008,.p3=190.68701,.p4="80.81.970",.p5=2,.p7=1.8,.p9=-3,.p10=4,.p12=1},{.p1=211,.p2=512.3008,.p3=190.68701,.p4="80.81.970",.p5=6,.p7=2,.p9=-3,.p10=3,.p12=1,.p15=1,.p17=-0.6},{.p1=211,.p2=521.8008,.p3=268.93402,.p4="80.81.970",.p5=6,.p7=2,.p9=-3,.p10=3,.p12=1,.p15=1,.p17=-0.6},{.p1=211,.p2=522.5,.p3=-35.184998,.p4="80.81.970",.p5=2,.p7=1.8,.p9=-3,.p10=4,.p12=1},{.p1=211,.p2=522.5,.p3=-35.184998,.p4="80.81.970",.p5=6,.p7=2,.p9=-3,.p10=3,.p12=1,.p15=1,.p17=-0.6},{.p1=211,.p2=521.8008,.p3=268.93402,.p4="80.81.970",.p5=2,.p7=1.8,.p9=-3,.p10=4,.p12=1},{.p1=211,.p2=523.0996,.p3=36.171997,.p4="80.81.970",.p5=2,.p7=1.8,.p9=-3,.p10=4,.p12=1},{.p1=211,.p2=523.0996,.p3=36.171997,.p4="80.81.970",.p5=6,.p7=2,.p9=-3,.p10=3,.p12=1,.p15=1,.p17=-0.6},{.p1=211,.p2=553,.p3=154.344,.p4="80.81.970",.p5=6,.p7=2,.p9=-3,.p10=3,.p12=1,.p15=1,.p17=-0.6},{.p1=211,.p2=553,.p3=154.344,.p4="80.81.970",.p5=2,.p7=1.8,.p9=-3,.p10=4,.p12=1},{.p1=216,.p2=612,.p3=165,.p4="84.79",.p5=4,.p6=5,.p9=3,.p10=2},{.p1=1888,.p2=562.1992,.p3=406.93,.p4="84.79",.p5=3,.p7=4,.p9=3,.p10=9,.p11=1},{.p1=507,.p2=568,.p3=385,.p4="34.84.79",.p5=6,.p8=-270,.p11=1,.p12=1},{.p1=216,.p2=644,.p3=225,.p4="84.79",.p5=4,.p6=5,.p8=-180,.p9=3,.p10=2},{.p1=255,.p2=627,.p3=120,.p4="84.79",.p5=4,.p6=5,.p7=2,.p9=3},{.p1=255,.p2=642.5996,.p3=83.79199,.p4="84.79",.p5=4,.p6=5,.p9=3},{.p1=255,.p2=653.5,.p3=41.23999,.p4="84.79",.p5=4,.p6=5,.p9=3},{.p1=495,.p2=627.8008,.p3=119.466,.p4="34.76.84.79",.p5=4,.p7=2,.p9=3,.p10=-6},{.p1=508,.p2=642.1992,.p3=134.34698,.p4="84.79",.p5=4,.p9=5,.p10=2},{.p1=508,.p2=642.1992,.p3=126.346985,.p4="84.79",.p5=4,.p9=5,.p10=2},{.p1=508,.p2=642.1992,.p3=138.34698,.p4="84.79",.p5=4,.p9=5,.p10=2},{.p1=508,.p2=642.1992,.p3=130.34698,.p4="84.79",.p5=4,.p9=5,.p10=2},{.p1=508,.p2=644,.p3=251.948,.p4="84.79",.p5=4,.p9=5,.p10=2},{.p1=508,.p2=644,.p3=243.948,.p4="84.79",.p5=4,.p9=5,.p10=2},{.p1=508,.p2=644,.p3=255.948,.p4="84.79",.p5=4,.p9=5,.p10=2},{.p1=508,.p2=644,.p3=247.948,.p4="84.79",.p5=4,.p9=5,.p10=2},{.p1=1765,.p2=638.8008,.p3=288.505,.p4="84.79",.p5=2,.p9=5,.p10=2},{.p1=469,.p2=610.5,.p3=270.5,.p4="34.84.79",.p5=6,.p9=1,.p10=-6,.p12=1},{.p1=507,.p2=576,.p3=363,.p4="34.84.79",.p5=6,.p8=-270,.p11=1,.p12=1},{.p1=469,.p2=606.5,.p3=266.5,.p4="34.84.79",.p5=6,.p9=1,.p10=-6,.p12=1},{.p1=507,.p2=614.5,.p3=260.5,.p4="34.84.79",.p5=6,.p12=1},{.p1=507,.p2=572,.p3=389,.p4="34.84.79",.p5=6,.p8=-270,.p11=1,.p12=1},{.p1=507,.p2=614.5,.p3=256.5,.p4="34.84.79",.p5=6,.p12=1},{.p1=469,.p2=586,.p3=303,.p4="34.84.79",.p5=6,.p9=1,.p10=-6,.p12=1},{.p1=469,.p2=582,.p3=299,.p4="34.84.79",.p5=6,.p9=1,.p10=-6,.p12=1},{.p1=507,.p2=576,.p3=393,.p4="34.84.79",.p5=6,.p8=-270,.p11=1,.p12=1},{.p1=507,.p2=572,.p3=359,.p4="34.84.79",.p5=6,.p8=-270,.p11=1,.p12=1},{.p1=507,.p2=568,.p3=325,.p4="34.84.79",.p5=6,.p8=-270,.p11=1,.p12=1},{.p1=507,.p2=568,.p3=355,.p4="34.84.79",.p5=6,.p8=-270,.p11=1,.p12=1},{.p1=469,.p2=614.5,.p3=274.5,.p4="34.84.79",.p5=6,.p9=3,.p10=-6,.p12=1},{.p1=469,.p2=578,.p3=295,.p4="34.84.79",.p5=6,.p9=1,.p10=-6,.p12=1},{.p1=507,.p2=576,.p3=333,.p4="34.84.79",.p5=6,.p8=-270,.p11=1,.p12=1},{.p1=507,.p2=572,.p3=329,.p4="34.84.79",.p5=6,.p8=-270,.p11=1,.p12=1},{.p1=211,.p2=560.6992,.p3=78.83899,.p4="80.81.970",.p5=2,.p7=1.8,.p9=-3,.p10=4,.p12=1},{.p1=211,.p2=560.5,.p3=-74.151,.p4="80.81.970",.p5=6,.p7=2,.p9=-3,.p10=3,.p12=1,.p15=1,.p17=-0.6},{.p1=211,.p2=560.6992,.p3=78.83899,.p4="80.81.970",.p5=6,.p7=2,.p9=-3,.p10=3,.p12=1,.p15=1,.p17=-0.6},{.p1=211,.p2=560.5,.p3=-74.151,.p4="80.81.970",.p5=2,.p7=1.8,.p9=-3,.p10=4,.p12=1},{.p1=211,.p2=563.5,.p3=361.839,.p4="80.81.970",.p5=2,.p7=1.8,.p9=-3,.p10=4,.p12=1},{.p1=211,.p2=564.5,.p3=0.68099976,.p4="80.81.970",.p5=6,.p7=2,.p9=-3,.p10=3,.p12=1,.p15=1,.p17=-0.6},{.p1=211,.p2=564.5,.p3=0.68099976,.p4="80.81.970",.p5=2,.p7=1.8,.p9=-3,.p10=4,.p12=1},{.p1=211,.p2=563.5,.p3=361.839,.p4="80.81.970",.p5=6,.p7=2,.p9=-3,.p10=3,.p12=1,.p15=1,.p17=-0.6},{.p1=211,.p2=567.8008,.p3=288.99902,.p4="80.81.970",.p5=6,.p7=2,.p9=-3,.p10=3,.p12=1,.p15=1,.p17=-0.6},{.p1=211,.p2=567.8008,.p3=288.99902,.p4="80.81.970",.p5=2,.p7=1.8,.p9=-3,.p10=4,.p12=1},{.p1=211,.p2=570.5996,.p3=128.46997,.p4="80.81.970",.p5=2,.p7=1.8,.p9=-3,.p10=4,.p12=1},{.p1=211,.p2=570.5996,.p3=128.46997,.p4="80.81.970",.p5=6,.p7=2,.p9=-3,.p10=3,.p12=1,.p15=1,.p17=-0.6},{.p1=211,.p2=595.4004,.p3=318.45203,.p4="80.81.970",.p5=6,.p7=2,.p9=-3,.p10=3,.p12=1,.p15=1,.p17=-0.6},{.p1=211,.p2=595.4004,.p3=318.45203,.p4="80.81.970",.p5=2,.p7=1.8,.p9=-3,.p10=4,.p12=1},{.p1=211,.p2=596.1992,.p3=241.32202,.p4="80.81.970",.p5=6,.p7=2,.p9=-3,.p10=3,.p12=1,.p15=1,.p17=-0.6},{.p1=211,.p2=596.1992,.p3=241.32202,.p4="80.81.970",.p5=2,.p7=1.8,.p9=-3,.p10=4,.p12=1},{.p1=211,.p2=593.5,.p3=164.28699,.p4="80.81.970",.p5=2,.p7=1.8,.p9=-3,.p10=4,.p12=1},{.p1=211,.p2=593.5,.p3=164.28699,.p4="80.81.970",.p5=6,.p7=2,.p9=-3,.p10=3,.p12=1,.p15=1,.p17=-0.6},{.p1=211,.p2=597.6992,.p3=91.91101,.p4="80.81.970",.p5=6,.p7=2,.p9=-3,.p10=3,.p12=1,.p15=1,.p17=-0.6},{.p1=211,.p2=597.6992,.p3=91.91101,.p4="80.81.970",.p5=2,.p7=1.8,.p9=-3,.p10=4,.p12=1},{.p1=211,.p2=598.5,.p3=-27.674011,.p4="80.81.970",.p5=6,.p7=2,.p9=-3,.p10=3,.p12=1,.p15=1,.p17=-0.6},{.p1=211,.p2=598.5,.p3=-27.674011,.p4="80.81.970",.p5=2,.p7=1.8,.p9=-3,.p10=4,.p12=1},{.p1=211,.p2=614,.p3=276.24902,.p4="80.81.970",.p5=2,.p7=1.8,.p9=-3,.p10=4,.p12=1},{.p1=211,.p2=614,.p3=276.24902,.p4="80.81.970",.p5=6,.p7=2,.p9=-3,.p10=3,.p12=1,.p15=1,.p17=-0.6},{.p1=211,.p2=618.5,.p3=192.98602,.p4="80.81.970",.p5=2,.p7=1.8,.p9=-3,.p10=4,.p12=1},{.p1=211,.p2=618.5,.p3=192.98602,.p4="80.81.970",.p5=6,.p7=2,.p9=-3,.p10=3,.p12=1,.p15=1,.p17=-0.6},{.p1=211,.p2=636.6992,.p3=48.472992,.p4="80.81.970",.p5=2,.p7=1.8,.p9=-3,.p10=4,.p12=1},{.p1=211,.p2=636.6992,.p3=48.472992,.p4="80.81.970",.p5=6,.p7=2,.p9=-3,.p10=3,.p12=1,.p15=1,.p17=-0.6},{.p1=211,.p2=643.4004,.p3=345.99402,.p4="80.81.970",.p5=6,.p7=2,.p9=-3,.p10=3,.p12=1,.p15=1,.p17=-0.6},{.p1=211,.p2=643.4004,.p3=345.99402,.p4="80.81.970",.p5=2,.p7=1.8,.p9=-3,.p10=4,.p12=1},{.p1=211,.p2=644.5996,.p3=259.65802,.p4="80.81.970",.p5=2,.p7=1.8,.p9=-3,.p10=4,.p12=1},{.p1=211,.p2=644.5996,.p3=259.65802,.p4="80.81.970",.p5=6,.p7=2,.p9=-3,.p10=3,.p12=1,.p15=1,.p17=-0.6},{.p1=211,.p2=647.5,.p3=6.601013,.p4="80.81.970",.p5=2,.p7=1.8,.p9=-3,.p10=4,.p12=1},{.p1=211,.p2=647.5,.p3=6.601013,.p4="80.81.970",.p5=6,.p7=2,.p9=-3,.p10=3,.p12=1,.p15=1,.p17=-0.6},{.p1=255,.p2=672,.p3=105,.p4="84.79",.p5=4,.p6=5,.p9=3},{.p1=255,.p2=659,.p3=270,.p4="84.79",.p5=4,.p6=5,.p7=2,.p9=3},{.p1=255,.p2=717,.p3=90,.p4="84.79",.p5=4,.p6=5,.p7=2,.p9=3},{.p1=507,.p2=704.5,.p3=-108.5,.p4="34.84.79",.p5=6,.p8=-270,.p11=1,.p12=1},{.p1=507,.p2=708.5,.p3=-104.5,.p4="34.84.79",.p5=6,.p8=-270,.p11=1,.p12=1},{.p1=507,.p2=712.5,.p3=-100.5,.p4="34.84.79",.p5=6,.p8=-270,.p11=1,.p12=1},{.p1=507,.p2=704.5,.p3=-78.5,.p4="34.84.79",.p5=6,.p8=-270,.p11=1,.p12=1},{.p1=1888,.p2=708,.p3=-150.34,.p4="84.79",.p5=3,.p7=4,.p9=3,.p10=9,.p11=1},{.p1=507,.p2=704.5,.p3=-138.5,.p4="34.84.79",.p5=6,.p8=-270,.p11=1,.p12=1},{.p1=507,.p2=708.5,.p3=-134.5,.p4="34.84.79",.p5=6,.p8=-270,.p11=1,.p12=1},{.p1=507,.p2=712.5,.p3=-130.5,.p4="34.84.79",.p5=6,.p8=-270,.p11=1,.p12=1},{.p1=255,.p2=673.4004,.p3=70.28198,.p4="84.79",.p5=4,.p6=5,.p7=2,.p9=3},{.p1=255,.p2=688.0996,.p3=290.28302,.p4="84.79",.p5=4,.p6=5,.p7=2,.p9=3},{.p1=255,.p2=702.1992,.p3=43.49301,.p4="84.79",.p5=4,.p6=5,.p9=3},{.p1=255,.p2=673.8008,.p3=15.95401,.p4="84.79",.p5=4,.p6=5,.p9=3},{.p1=255,.p2=684.5996,.p3=265.34003,.p4="84.79",.p5=4,.p6=5,.p9=3},{.p1=495,.p2=661,.p3=268.768,.p4="34.76.84.79",.p5=4,.p7=2,.p9=3,.p10=-6},{.p1=495,.p2=713.8008,.p3=90.375,.p4="34.76.84.79",.p5=4,.p7=2,.p9=3,.p10=-6},{.p1=508,.p2=732.9004,.p3=104.31799,.p4="84.79",.p5=4,.p9=5,.p10=2},{.p1=508,.p2=732.9004,.p3=96.31799,.p4="84.79",.p5=4,.p9=5,.p10=2},{.p1=508,.p2=732.9004,.p3=108.31799,.p4="84.79",.p5=4,.p9=5,.p10=2},{.p1=508,.p2=732.9004,.p3=100.31799,.p4="84.79",.p5=4,.p9=5,.p10=2},{.p1=220,.p2=671.8008,.p3=74.935974,.p4="84.79",.p5=4,.p6=4,.p8=90,.p9=7,.p13=-150,.p18=-150},{.p1=220,.p2=702.5996,.p3=303.943,.p4="84.79",.p5=4,.p6=4,.p8=90,.p9=7,.p13=-150,.p18=-150},{.p1=1765,.p2=698.6992,.p3=108.216,.p4="84.79",.p5=2,.p9=5,.p10=2},{.p1=507,.p2=674,.p3=225,.p4="34.84.79",.p5=6,.p8=-90},{.p1=507,.p2=678,.p3=225,.p4="34.84.79",.p5=6,.p8=-90},{.p1=507,.p2=682,.p3=225,.p4="34.84.79",.p5=6,.p8=-90},{.p1=507,.p2=674,.p3=195,.p4="34.84.79",.p5=6,.p8=-90},{.p1=507,.p2=678,.p3=195,.p4="34.84.79",.p5=6,.p8=-90},{.p1=507,.p2=682,.p3=195,.p4="34.84.79",.p5=6,.p8=-90},{.p1=507,.p2=674,.p3=165,.p4="34.84.79",.p5=6,.p8=-90},{.p1=507,.p2=678,.p3=165,.p4="34.84.79",.p5=6,.p8=-90},{.p1=507,.p2=682,.p3=165,.p4="34.84.79",.p5=6,.p8=-90},{.p1=507,.p2=674,.p3=135,.p4="34.84.79",.p5=6,.p8=-90},{.p1=507,.p2=678,.p3=135,.p4="34.84.79",.p5=6,.p8=-90},{.p1=507,.p2=682,.p3=135,.p4="34.84.79",.p5=6,.p8=-90},{.p1=507,.p2=708.5,.p3=-45.5,.p4="34.84.79",.p5=6,.p8=-270,.p11=1,.p12=1},{.p1=507,.p2=712.5,.p3=-41.5,.p4="34.84.79",.p5=6,.p8=-270,.p11=1,.p12=1},{.p1=469,.p2=686,.p3=-21,.p4="34.84.79",.p5=6,.p9=1,.p10=-6,.p12=1},{.p1=469,.p2=694,.p3=-13,.p4="34.84.79",.p5=6,.p9=1,.p10=-6,.p12=1},{.p1=507,.p2=708.5,.p3=-74.5,.p4="34.84.79",.p5=6,.p8=-270,.p11=1,.p12=1},{.p1=507,.p2=680,.p3=-13,.p4="34.84.79",.p5=6,.p8=-90},{.p1=507,.p2=712.5,.p3=-70.5,.p4="34.84.79",.p5=6,.p8=-270,.p11=1,.p12=1},{.p1=507,.p2=676,.p3=-13,.p4="34.84.79",.p5=6,.p8=-90},{.p1=469,.p2=690,.p3=-17,.p4="34.84.79",.p5=6,.p9=1,.p10=-6,.p12=1},{.p1=507,.p2=704.5,.p3=-49.5,.p4="34.84.79",.p5=6,.p8=-270,.p11=1,.p12=1},{.p1=211,.p2=662.0996,.p3=153.82,.p4="80.81.970",.p5=6,.p7=2,.p9=-3,.p10=3,.p12=1,.p15=1,.p17=-0.6},{.p1=211,.p2=662.0996,.p3=153.82,.p4="80.81.970",.p5=2,.p7=1.8,.p9=-3,.p10=4,.p12=1},{.p1=211,.p2=676.3008,.p3=383.609,.p4="80.81.970",.p5=2,.p7=1.8,.p9=-3,.p10=4,.p12=1},{.p1=211,.p2=676.3008,.p3=383.609,.p4="80.81.970",.p5=6,.p7=2,.p9=-3,.p10=3,.p12=1,.p15=1,.p17=-0.6},{.p1=211,.p2=680.1992,.p3=304.906,.p4="80.81.970",.p5=6,.p7=2,.p9=-3,.p10=3,.p12=1,.p15=1,.p17=-0.6},{.p1=211,.p2=680.1992,.p3=304.906,.p4="80.81.970",.p5=2,.p7=1.8,.p9=-3,.p10=4,.p12=1},{.p1=211,.p2=716,.p3=343.836,.p4="80.81.970",.p5=2,.p7=1.8,.p9=-3,.p10=4,.p12=1},{.p1=211,.p2=716,.p3=343.836,.p4="80.81.970",.p5=6,.p7=2,.p9=-3,.p10=3,.p12=1,.p15=1,.p17=-0.6},{.p1=1888,.p2=1516.5801,.p3=129.37,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=1678.5801,.p3=286.24,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=1657,.p3=369.49,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=1613.8809,.p3=225.56006,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=1669.3906,.p3=125.349976,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=1670.4004,.p3=91.43994,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=1655.4609,.p3=431.69995,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=1624.6797,.p3=174.68005,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=1692.4609,.p3=209.15002,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=1615.4199,.p3=267.18994,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=1643.1191,.p3=-45.23999,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=1660.0801,.p3=45.72998,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=1653.4395,.p3=-70.97998,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=1681.6602,.p3=107.390015,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=1804.4102,.p3=281.54004,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=1900.5293,.p3=-60.79004,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=1816.75,.p3=61.069946,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=1941.2598,.p3=117.640015,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=2001.2695,.p3=434.79004,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=1934.6094,.p3=301.1101,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=1979.6895,.p3=345.37012,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=1987.5703,.p3=220.93994,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=1988.9395,.p3=307.83008,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=1978.6895,.p3=-9.369995,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=1942.1602,.p3=-26.869995,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=1956.5703,.p3=187.56995,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=2001.8203,.p3=61.55005,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=1956.7305,.p3=271.82007,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=1935.0898,.p3=-40.150024,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=1933.5508,.p3=72.390015,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=1975.0703,.p3=135.15002,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=1936.6309,.p3=23.060059,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=1924.2891,.p3=264.1001,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=1951.9395,.p3=243.06995,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=2019.9492,.p3=125.349976,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=2139.5098,.p3=221.94995,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=2283.3906,.p3=404.4099,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=2267.1602,.p3=51.47998,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=2269.5098,.p3=351.99,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=2252.5508,.p3=272.83008,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=2231.961,.p3=232.75,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=2245.5703,.p3=97.72998,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=2284.3906,.p3=89.369995,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=2237.8691,.p3=184.06995,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=2290.8203,.p3=10.319946,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=2267.4297,.p3=177.25,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=2244.039,.p3=143.97998,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=2287,.p3=-15.469971,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=2289.5508,.p3=302.6599,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=2252.0195,.p3=7.660034,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=2335.8008,.p3=-16.95996,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=2379.0898,.p3=347.57007,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=2371.4492,.p3=333.69995,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=2317.8398,.p3=469.16992,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=2386.6797,.p3=-16.95996,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=2439.2793,.p3=311.57007,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=2442.1797,.p3=-12.339966,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=2434.0098,.p3=170.32996,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=2458.67,.p3=-21.109985,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=2584.0195,.p3=79.98999,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=2569.1406,.p3=430.0901,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=2563.5098,.p3=9.180054,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=2587.1094,.p3=368.41992,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=2549.5508,.p3=3.9100342,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=2553.1797,.p3=39.900024,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=2631.8008,.p3=195.62,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=2625.6406,.p3=129.31995,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=2624.1094,.p3=314.46997,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=2613.3008,.p3=260.51,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=2734.789,.p3=135.87,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=2851.3906,.p3=274.78003,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=2889.461,.p3=10.609985,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=2819.0195,.p3=227.98999,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=2849.8496,.p3=416.1399,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=2827.6094,.p3=290.97998,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=2844.211,.p3=204.87,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=2864.2598,.p3=47.609985,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=2837.5195,.p3=366.81006,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=2871.961,.p3=138.57996,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=2826.711,.p3=314.8601,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=3102.8008,.p3=107.390015,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=3073.5195,.p3=256.93994,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=3080.6094,.p3=224.97998,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=3098.1797,.p3=85.27002,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=3095.0996,.p3=167.52002,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=3082.7695,.p3=210.68994,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=3068.2695,.p3=369.8899,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=3060.5703,.p3=294.3501,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=3088.3008,.p3=15.300049,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=3073.5195,.p3=303.26,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=3112.9805,.p3=147.89001,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=3196.3008,.p3=218.05005,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=3108.3594,.p3=67.71997,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=3133.1992,.p3=-9.910034,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=3307.3496,.p3=340.91992,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=3322.121,.p3=308.49,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=3347.961,.p3=105.43994,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=3347.33,.p3=69.390015,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=3312.871,.p3=416.4099,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=3346.4297,.p3=202.56995,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=3346.4297,.p3=47.859985,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=3369.9102,.p3=95.73999,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=3347.33,.p3=-18.619995,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=3348.871,.p3=197.34998,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=3336.6406,.p3=273.08008,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9},{.p1=1888,.p2=3479.9805,.p3=111.130005,.p4="35",.p5=3,.p7=4,.p9=3,.p10=9}
        }
    };    

    CCLayerColor* m_overlay = nullptr;
    
    CCNode* m_objectLayer = nullptr;
    CCNode* m_congregationContainer = nullptr;

    PlayerObject* m_player = nullptr;

    NoobGameObject* m_arbitraryObject = nullptr;
    
    CCPoint m_playerStartPos;
    CCPoint m_firstCameraPos;
    CCPoint m_cameraStartPos;
    CCPoint m_layerStartPos;
    CCPoint m_cameraPos;
    CCPoint m_startCameraOffset;

    std::unordered_map<int, std::vector<NoobGameObject*>> m_groupObjects;
    std::unordered_map<int, std::vector<NoobGameObject*>> m_baseColorObjects;
    std::unordered_map<int, std::vector<NoobGameObject*>> m_detailColorObjects;
    std::unordered_map<int, std::vector<CCAction*>> m_hueActionsForGroup;

    float m_time = 0.f;
    float m_arbitraryObjectStartYPos;
    float m_lockedCameraYPos;
    float m_ogMusicVolume = 1.f;
    float m_ogSFXVolume = 1.f;

    bool m_isSecondStep = false;
    bool m_didJump = false;

    ~Congregation() {
        setVolume(m_ogMusicVolume, m_ogSFXVolume);
    }

    void setVolume(float music, float sfx) {
        FMODAudioEngine* fmod = FMODAudioEngine::get();

        fmod->m_backgroundMusicChannel->setVolume(music);
        fmod->m_globalChannel->setVolume(sfx);
    }

    void update(float dt) {
        m_time += dt;

        if (m_time > 0.9f && !m_isSecondStep) {
            if (m_time > 2.f)
                secondStep();

            return;
        }

        m_player->updateInternalActions(dt);
        m_player->update(dt * 60.f);

        m_player->m_totalTime = m_time;

        float y = 649.9824f + m_arbitraryObject->getPositionY() - m_arbitraryObjectStartYPos;

        if (m_isSecondStep && m_player->getPositionY() < y && !m_didJump) {
            m_player->setPositionY(y);
            m_player->hitGround(nullptr, false);
        }

        m_player->updateRotation(dt * 60.f);

        cocos2d::CCPoint targetPos;

        if (m_isSecondStep)
            targetPos = -m_player->getPosition() + ccp(211, 105);
        else
            targetPos = 
                (-m_playLayer->m_objectLayer->getPosition() + (m_startCameraOffset - m_playLayer->m_gameState.m_cameraOffset)
                + m_size / 2.f
                + m_player->getPosition()
                - m_playerStartPos)
                / m_objectLayer->getScale();

        if (m_cameraPos == ccp(0, 0))
            m_cameraPos = targetPos;

        m_cameraPos = ccpLerp(m_cameraPos, targetPos, 1.f - expf(-6.84f * dt));

        m_isSecondStep ? m_objectLayer->setPosition({targetPos.x, m_didJump ? m_lockedCameraYPos : m_cameraPos.y}) : m_objectLayer->setContentSize(m_cameraPos);

        if (m_isSecondStep) return;
        
        m_objectLayer->setRotation(m_playLayer->m_gameState.m_cameraAngle);

        float yPos = (m_cameraStartPos - (m_cameraPos - m_layerStartPos)).y;

        if (yPos >= 0)
            m_playLayer->m_objectLayer->getParent()->setPositionY(yPos);
        else
            m_playLayer->m_gameState.m_cameraOffset.y = (m_cameraPos - m_layerStartPos).y;

        m_playLayer->m_gameState.m_cameraOffset.x = (m_cameraPos - m_layerStartPos).x;

        float progress = std::min(m_time / 0.5f, 1.f);

        setVolume(
            m_ogMusicVolume - progress * m_ogMusicVolume,
            m_ogSFXVolume - progress * m_ogSFXVolume
        );
    }

    void secondStep() {
        m_isSecondStep = true;
        m_cameraPos = -ccp(50, 2000) + ccp(211, 0);

        m_player->setPosition({50, 2000});
        m_player->setScale(1.f);

        m_player->m_yVelocity = -15;
        m_player->m_fallSpeed = 0;
        m_player->m_platformerXVelocity = 0;
        m_player->m_gravity = 0.958199f;
        m_player->m_gravityMod = 1;
        m_player->m_stateFlipGravity = -607;
        m_player->m_isUpsideDown = false;
        m_player->m_rotationSpeed = 415.38f;
        m_player->m_rotateSpeed = 1;
        m_player->m_isRotating = true;

        m_objectLayer->setScale(1.f);
        m_objectLayer->setRotation(0.f);
        m_objectLayer->setAnchorPoint({0, 0});
        m_objectLayer->setContentSize({0, 0});

        m_overlay->stopAllActions();
        m_overlay->runAction(CCFadeTo::create(0.97f, 0));

        m_congregationContainer->setVisible(true);

        for (NoobGameObject* object : m_groupObjects.at(79))
            object->setPositionY(object->getPositionY() + 60);

        addChild(CCLayerColor::create({0, 0, 0, 255}, m_size.width, m_size.height), 0);

        scheduleOnce(schedule_selector(Congregation::secondPointFiveStep), 0.5f);
        scheduleOnce(schedule_selector(Congregation::idkAnymore), 1.45f);
        scheduleOnce(schedule_selector(Congregation::thirdStep), 1.5f);
    }

    void idkAnymore(float) {
        for (NoobGameObject* object : m_groupObjects.at(83))
            object->runAction(CCEaseSineInOut::create(CCMoveBy::create(1.f, {0, -60})));

        scheduleOnce(schedule_selector(Congregation::xd), 0.5f);
    }

    void xd(float) {
        for (NoobGameObject* object : m_groupObjects.at(84))
            object->runAction(CCEaseSineInOut::create(CCMoveBy::create(1.f, {0, -60})));

        for (NoobGameObject* object : m_groupObjects.at(82))
            object->runAction(CCEaseSineInOut::create(CCMoveBy::create(1.f, {0, 60})));
    }

    void secondPointFiveStep(float) {
        for (NoobGameObject* object : m_groupObjects.at(82))
            object->runAction(CCEaseSineInOut::create(CCMoveBy::create(1.f, {0, -60})));
    }

    void thirdStep(float) {
        FMODAudioEngine* fmod = FMODAudioEngine::get();

        fmod->m_backgroundMusicChannel->setPaused(true);
        fmod->m_globalChannel->stop();

        setVolume(m_ogMusicVolume, m_ogSFXVolume);

        Utils::playSound(Anim::Congregation, "congregation.mp3", m_speed, 1.f);

        for (NoobGameObject* object : m_groupObjects.at(35))
            object->runAction(CCMoveBy::create(100.f, {-18000, 0}));

        for (NoobGameObject* object : m_groupObjects.at(80))
            object->runAction(CCMoveBy::create(53.f, {530 * 3, 0}));

        scheduleOnce(schedule_selector(Congregation::fourthStep), 0.15f);
    }

    void fourthStep(float) {
        m_player->m_playerSpeed = 1.1f;

        scheduleOnce(schedule_selector(Congregation::dontJump), 0.45f);
        scheduleOnce(schedule_selector(Congregation::fifthStep), 0.45f);
    }

    void dontJump(float) {
        m_player->pushButton(PlayerButton::Jump);
        m_player->releaseButton(PlayerButton::Jump);

        m_didJump = true;
        m_lockedCameraYPos = m_cameraPos.y;
    }

    void fifthStep(float) {
        for (NoobGameObject* object : m_groupObjects.at(34)) {
            for (CCAction* action : m_hueActionsForGroup.at(34))
                action->m_pTarget = nullptr;

            object->m_baseHSV.hue = 0;
            object->updateColor();
        }

        m_hueActionsForGroup.at(34).clear();

        for (NoobGameObject* object : m_baseColorObjects.at(4))
            object->runAction(HueTo::create(1.f, 43, object->m_baseColorHSV.hue, object->m_baseColorHSV.hue));

        for (NoobGameObject* object : m_detailColorObjects.at(4))
            object->runAction(HueTo::create(1.f, 43, object->m_detailColorHSV.hue, object->m_detailColorHSV.hue));

        for (NoobGameObject* object : m_baseColorObjects.at(6))
            object->runAction(HueTo::create(1.f, 43, object->m_baseColorHSV.hue, object->m_baseColorHSV.hue));

        for (NoobGameObject* object : m_groupObjects.at(76))
            object->runAction(FadeTo::create(1.f, 220, 255 / 2));
    
        scheduleOnce(schedule_selector(Congregation::sixthStep), 1.f);
    }

    void sixthStep(float) {
        for (NoobGameObject* object : m_groupObjects.at(34)) {
            CCRepeatForever* action = CCRepeatForever::create(
                CCSequence::create(
                    HueTo::create(0.15f, object->m_baseHSV.hue + 30, object->m_baseHSV.hue - 30, object->m_baseHSV.hue),
                    HueTo::create(0.15f, object->m_baseHSV.hue - 30, object->m_baseHSV.hue + 30, object->m_baseHSV.hue),
                    HueTo::create(0.15f, object->m_baseHSV.hue + 30, object->m_baseHSV.hue - 30, object->m_baseHSV.hue),
                    HueTo::create(0.15f, object->m_baseHSV.hue - 30, object->m_baseHSV.hue + 30, object->m_baseHSV.hue),
                    CCDelayTime::create(0.1f),
                    nullptr
                )
            );

            object->runAction(action);
        }
    }

    ANIMATION_CTOR_CREATE(Congregation)
    
public:

    void startEarly() override {
        Utils::setHighestZ(this);

        PlayerObject* player = m_playLayer->m_player1;
        FMODAudioEngine* fmod = FMODAudioEngine::get();

        player->setOpacity(0);
        fmod->m_backgroundMusicChannel->getVolume(&m_ogMusicVolume);
        fmod->m_globalChannel->getVolume(&m_ogSFXVolume);

        m_objectLayer = CCNode::create();
        m_objectLayer->setAnchorPoint({1, 1});
        m_objectLayer->setPosition(m_size / 2.f);
        m_objectLayer->setScale(m_playLayer->m_objectLayer->getScale());
        m_objectLayer->setRotation(m_playLayer->m_gameState.m_cameraAngle);
        m_objectLayer->setContentSize((-m_playLayer->m_objectLayer->getPosition() + m_size / 2.f) / m_objectLayer->getScale());
        
        addChild(m_objectLayer, 1);

        m_playerStartPos = player->getPosition();
        m_cameraStartPos = m_playLayer->m_objectLayer->getParent()->getPosition();
        m_layerStartPos = m_objectLayer->getContentSize();
        m_startCameraOffset = m_playLayer->m_gameState.m_cameraOffset;

        GameManager* gm = GameManager::get();

        m_player = PlayerObject::create(gm->getPlayerFrame(), 1, nullptr, this, false);
        m_player->addAllParticles();
        m_player->resetAllParticles();
        m_player->setPosition(player->getPosition());
        m_player->setRotation(player->getRotation());
        m_player->updateTimeMod(0.3f, false);
        m_player->setScale(player->getScale());

        cocos2d::ccColor3B color1 = gm->colorForIdx(gm->getPlayerColor());
        cocos2d::ccColor3B color2 = gm->colorForIdx(gm->getPlayerColor2());
        
        m_player->setColor(color1);
        m_player->setSecondColor(color2);
        m_player->m_hasGlow = gm->getPlayerGlow();

        if (gm->getPlayerGlow())
            m_player->enableCustomGlowColor(gm->colorForIdx(gm->getPlayerGlowColor()));
        else
            m_player->disableCustomGlowColor();

        m_player->updateGlowColor();
        m_player->updatePlayerGlow();

        m_player->m_fadeOutStreak = false;
        m_player->m_hasGroundParticles = false;
        m_player->m_yVelocity = player->m_yVelocity;
        m_player->m_fallSpeed = player->m_fallSpeed;
        m_player->m_platformerXVelocity = player->m_platformerXVelocity;
        m_player->m_gravity = player->m_gravity;
        m_player->m_gravityMod = player->m_gravityMod;
        m_player->m_stateFlipGravity = player->m_stateFlipGravity;
        m_player->m_isUpsideDown = player->m_isUpsideDown;
        m_player->m_rotationSpeed = player->m_rotationSpeed;
        m_player->m_rotateSpeed = player->m_rotateSpeed;
        m_player->m_isRotating = player->m_isRotating;
        
        m_player->update(0.f);

        m_objectLayer->addChild(m_player, 10);

        m_overlay = CCLayerColor::create({0, 0, 0, 0}, m_size.width, m_size.height);
        m_overlay->runAction(CCSequence::create(
            CCDelayTime::create(0.2f),
            CCFadeTo::create(0.55f, 255),
            nullptr
        ));

        addChild(m_overlay, 3);

        schedule(schedule_selector(Congregation::update));

        m_congregationContainer = CCNode::create();
        m_congregationContainer->setPosition({181, 545.5f});
        m_congregationContainer->setVisible(false);

        m_objectLayer->addChild(m_congregationContainer);

        for (const ObjectProperties& prop : m_objects) {
            NoobGameObject* object = NoobGameObject::create(prop.p1);

            object->setPosition(ccp(prop.p2, prop.p3));
            object->setScale(prop.p7);
            object->setRotation(prop.p8);
            object->setZOrder(
                (prop.p9 == 0 ? object->m_defaultZLayer : prop.p9) * 1000
                + (prop.p10 == 0 ? object->m_defaultZOrder : prop.p10)
            );
            object->setFlipX(prop.p11);
            object->setFlipY(prop.p12);

            object->m_baseHSV = {
                prop.p13,
                prop.p16,
                prop.p15 ? prop.p17 + 1.f : prop.p17
            };

            object->m_detailHSV = {
                prop.p18,
                prop.p21, 
                prop.p20 ? prop.p22 + 1.f : prop.p22
            };

            object->updateColor();

            m_congregationContainer->addChild(object);

            std::string groups = prop.p4;

            if (!groups.empty())
                for (const std::string& groupString : Utils::split(groups, '.')) {
                    int group = numFromString<int>(groupString).unwrapOr(0);

                    if (!group) continue;

                    if (m_groupObjects.contains(group))
                        m_groupObjects.at(group).push_back(object);
                    else
                        m_groupObjects[group] = { object };
                }

            if (prop.p5 != 0) {
                if (m_baseColorObjects.contains(prop.p5))
                    m_baseColorObjects.at(prop.p5).push_back(object);
                else
                    m_baseColorObjects[prop.p5] = { object };
            }

            if (prop.p6 != 0) {
                if (m_detailColorObjects.contains(prop.p6))
                    m_detailColorObjects.at(prop.p6).push_back(object);
                else
                    m_detailColorObjects[prop.p6] = { object };
            }
        }

        for (NoobGameObject* object : m_baseColorObjects.at(4)) {
            object->setBaseColor({44, 71, 255}, true);
            object->m_baseColorHSV.hue = 140;
            object->updateColor();
        }

        for (NoobGameObject* object : m_baseColorObjects.at(6)) {
            object->setBaseColor({44, 71, 255}, false);
            object->m_baseColorHSV.hue = 140;
            object->updateColor();
        }

        for (NoobGameObject* object : m_baseColorObjects.at(5))
                object->setBaseColor({195, 40, 1}, false);

        for (NoobGameObject* object : m_baseColorObjects.at(2))
            object->setBaseColor({0, 0, 0}, false);

        for (NoobGameObject* object : m_baseColorObjects.at(3))
            object->setBaseColor({0, 0, 0}, false);

        for (NoobGameObject* object : m_detailColorObjects.at(5))
            object->setDetailColor({195, 40, 1}, false);

        for (NoobGameObject* object : m_detailColorObjects.at(4)) {
            object->setDetailColor({44, 71, 255}, true);
            object->m_detailColorHSV.hue = 140;
            object->updateColor();
        }

        m_arbitraryObject = m_groupObjects.at(82).front();
        m_arbitraryObjectStartYPos = m_arbitraryObject->getPositionY();

        for (NoobGameObject* object : m_groupObjects.at(80))
            object->setPositionX(object->getPositionX() + 30);

        for (NoobGameObject* object : m_groupObjects.at(76))
            object->setOpacity(255 / 2);

        for (NoobGameObject* object : m_groupObjects.at(35)) {
            object->setOpacity(77);
            object->setPositionX(object->getPositionX() - 1535);
        }

        for (NoobGameObject* object : m_groupObjects.at(34)) {
            CCRepeatForever* action = CCRepeatForever::create(
                CCSequence::create(
                    HueTo::create(0.15f, object->m_baseHSV.hue + 30, object->m_baseHSV.hue - 30, object->m_baseHSV.hue),
                    HueTo::create(0.15f, object->m_baseHSV.hue - 30, object->m_baseHSV.hue + 30, object->m_baseHSV.hue),
                    HueTo::create(0.15f, object->m_baseHSV.hue + 30, object->m_baseHSV.hue - 30, object->m_baseHSV.hue),
                    HueTo::create(0.15f, object->m_baseHSV.hue - 30, object->m_baseHSV.hue + 30, object->m_baseHSV.hue),
                    CCDelayTime::create(0.1f),
                    nullptr
                )
            );

            object->runAction(action);

            if (m_hueActionsForGroup.contains(34))
                m_hueActionsForGroup.at(34).push_back(action);
            else
                m_hueActionsForGroup[34] = { action };
        }
    }

    void end() override {
        m_playLayer->m_objectLayer->getParent()->setPosition(m_cameraStartPos);
        m_playLayer->m_gameState.m_cameraOffset = m_startCameraOffset;

        BaseAnimation::end();
    }
};